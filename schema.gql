type AccountMutation {
  create(data: NewAccountInput!): Account!
}

type AccountQuery {
  list: [Account!]!
}

type Mutation {
  accounts: AccountMutation!
  currencies: CurrencyMutation!
}

type Currency {
  id: ID!
  name: String!
  code: String!
  symbol: String
  numericCode: Int!
  digits: Int!
  selected: Boolean!
}

type CurrencyMutation {
  setSelected(currencyId: ID!, value: Boolean!): Currency!
}

enum AccountType {
  VAULT
  CREDIT
  LOAN
  PROMISE
}

input NewAccountInput {
  name: String!
  currencyId: ID!
  accountType: AccountType!
  icon: String
}

type Query {
  apiVersion: String!
  accounts: AccountQuery!
  currencies: CurrencyQuery!
}

type Account {
  id: ID!
  name: String!
  kind: AccountType!
  currency: Currency!
}

type CurrencyQuery {
  list: [Currency!]!
}

schema {
  query: Query
  mutation: Mutation
}

